#! /usr/bin/python

import os
import time
from subprocess import Popen, PIPE

def execAndWait(cli_str):
   print 'EXEC:', cli_str
   process = Popen(cli_str, shell=True)
   while process.poll() == None:
      time.sleep(0.01)

execAndWait('xdg-desktop-menu  uninstall /usr/share/applications/armory.desktop')
execAndWait('xdg-desktop-menu  uninstall /usr/share/applications/armorytestnet.desktop')
execAndWait('xdg-desktop-menu  uninstall /usr/share/applications/armoryoffline.desktop')
execAndWait('xdg-icon-resource uninstall --size 64 armoryicon')
execAndWait('xdg-icon-resource uninstall --size 64 armorytestneticon')
execAndWait('xdg-icon-resource uninstall --size 64 armoryofflineicon')

# This doesn't work because it needs to be run as the current user
#execAndWait('gconftool-2 --unset /desktop/gnome/url-handlers/bitcoin/command')
#execAndWait('gconftool-2 -t bool -s /desktop/gnome/url-handlers/bitcoin/enabled false')

# ACR: REMOVED DEFAULT POSTINST TEMPLATE FROM dh_make
#      ...

# postrm script for armory
#
# see: dh_installdeb(1)


#set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


#case "$1" in
    #purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    #;;
#
    #*)
        #echo "postrm called with unknown argument \`$1'" >&2
        #exit 1
    #;;
#esac
#
# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

#exit 0
